# Servers.
conductor.grpc-server.enabled=false

# Database persistence model.
conductor.db.type=redis_standalone

# Dynomite Cluster details.
# format is host:port:rack separated by semicolon
conductor.redis.hosts=redis:6379:us-east-1c

# Namespace for the keys stored in Dynomite/Redis
conductor.redis.workflowNamespacePrefix=conductor

# Namespace prefix for the dyno queues
conductor.redis.queueNamespacePrefix=conductor_queues

# No. of threads allocated to dyno-queues (optional)
queues.dynomite.threads=10

# By default with dynomite, we want the repairservice enabled
conductor.app.workflowRepairServiceEnabled=true

# Non-quorum port used to connect to local redis.  Used by dyno-queues.
# When using redis directly, set this to the same port as redis server
# For Dynomite, this is 22122 by default or the local redis-server port used by Dynomite.
conductor.redis.queuesNonQuorumPort=6379
conductor.redis.queues.retry.deadline=30000

# Elastic search instance indexing is disabled.
conductor.indexing.enabled=true
conductor.elasticsearch.indexName=conductor
conductor.elasticsearch.url=http://es:9200
conductor.elasticsearch.indexReplicasCount=0

# Additional modules for metrics collection exposed via logger (optional)
# conductor.metrics-logger.enabled=true
# conductor.metrics-logger.reportPeriodSeconds=15
# Additional modules for metrics collection exposed to Prometheus (optional)
#conductor.metrics-prometheus.enabled=true
#management.endpoints.web.exposure.include=prometheus, health, info, metrics

# Load sample kitchen sink workflow
loadSample=false

conductor.elasticsearch.clusterHealthColor=yellow
